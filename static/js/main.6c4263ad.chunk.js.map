{"version":3,"sources":["components/Calendar/Calendar.js","components/Calendar/index.js","serviceWorker.js","index.js"],"names":["Cal","styled","div","Day","Room","p","Calendar","numOfRoomsArray","Array","from","numOfRooms","keys","numOfDaysArray","useState","uncheckedRooms","map","day","i","key","length","allRooms","splice","pop","randomNumber","num","Math","floor","random","numOfChecks","reduce","acc","_","removedNum","push","RoomCalculator","room","j","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"ijBAIA,IAAMA,EAAMC,IAAOC,IAAV,KAKHC,EAAMF,IAAOC,IAAV,KAKHE,EAAOH,IAAOI,EAAV,KCZKC,EDgBE,WAChB,IACMC,EAAkBC,MAAMC,KAAKD,MAAME,IAAgBC,QAEnDC,EAAiBJ,MAAMC,KAAKD,MADhB,GACiCG,QAJ7B,EAKgBE,mBAASN,GALzB,mBAKfO,EALe,UAyBtB,OACC,kBAACd,EAAD,KACEY,EAAeG,KAAI,SAACC,EAAKC,GACzB,OACA,kBAACd,EAAD,CAAKe,IAAG,cAASD,IAChB,mCAASA,EAAI,GAvBM,SAACA,GACvB,GAAIH,EAAeK,QAAU,GALZ,IAK+BF,EAAI,EAAG,CACtD,IAAMG,EAAWN,EAAeO,OAAO,EAAG,IAG1C,OAFAP,EAAeQ,MAERF,EAER,IAAMG,EAAe,SAACC,GAAD,OAASC,KAAKC,MAAMD,KAAKE,SAAWH,EAAM,IACzDI,EAAcL,EAAa,GACjC,OAAOT,EAAee,QAAO,SAACC,EAAKC,EAAGd,GACrC,GAAIA,EAAIW,EAAa,CACpB,IAAMI,EAAalB,EAAeO,OAAOE,EAAaT,EAAeK,OAAS,GAAI,GAAG,GACjFa,GAAYF,EAAIG,KAAKD,GAE1B,OAAOF,IACL,IASEI,CAAejB,GAAGF,KAAI,SAACoB,EAAMC,GAAP,OACvB,kBAAChC,EAAD,CAAMc,IAAG,cAASD,EAAT,iBAAmBmB,IAA5B,QAAuCD,YEtCvCE,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC3FjEC,IAASC,OAAO,kBAAC,EAAD,MAAcC,SAASC,eAAe,SDiB/C,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,gBAAwB7B,OAAOC,SAAS6B,MACpDC,SAAW/B,OAAOC,SAAS8B,OAIvC,OAGF/B,OAAOgC,iBAAiB,QAAQ,WAC9B,IAAM3B,EAAK,UAAMwB,gBAAN,sBAEP/B,IAgEV,SAAiCO,EAAOC,GAEtC2B,MAAM5B,EAAO,CACX6B,QAAS,CAAE,iBAAkB,YAE5BxB,MAAK,SAAAyB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,MAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,MAAK,WAC7BV,OAAOC,SAASyC,eAKpBtC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAwB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OCxC/BE,K","file":"static/js/main.6c4263ad.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { RoomCalculator, RoomCheck } from '../../utils/RoomCalculator'\r\n\r\nconst Cal = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n`;\r\n\t\r\nconst Day = styled.div`\r\n\twidth: calc(14% - 100px);\r\n\tmargin: 50px; \r\n`;\r\n\r\nconst Room = styled.p`\r\n\tfont-weight: bold;\r\n`;\r\n\r\nconst Calendar = () => {\r\n\tconst numOfRooms = 25;\r\n\tconst numOfRoomsArray = Array.from(Array(numOfRooms + 1).keys());\r\n\tconst numOfDays = 7;\r\n\tconst numOfDaysArray = Array.from(Array(numOfDays).keys());\r\n\tconst [uncheckedRooms, updateRooms] = useState(numOfRoomsArray);\r\n\r\n\tconst RoomCalculator = (i) => {\r\n\t\tif (uncheckedRooms.length <= 3 || numOfDays === i + 1) {\r\n\t\t\tconst allRooms = uncheckedRooms.splice(1, 25);\r\n\t\t\tuncheckedRooms.pop();\r\n\t\t\t// updateRooms(numOfRoomsArray);\r\n\t\t\treturn allRooms\r\n\t\t}\r\n\t\tconst randomNumber = (num) => Math.floor(Math.random() * num + 1);\r\n\t\tconst numOfChecks = randomNumber(6);\r\n\t\treturn uncheckedRooms.reduce((acc, _, i) => {\r\n\t\t\tif (i < numOfChecks) {\r\n\t\t\t\tconst removedNum = uncheckedRooms.splice(randomNumber(uncheckedRooms.length - 1), 1)[0];\r\n\t\t\t\tif (removedNum) acc.push(removedNum);\r\n\t\t\t}\r\n\t\t\treturn acc\r\n\t\t}, []);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Cal>\r\n\t\t\t{numOfDaysArray.map((day, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t<Day key={`Day ${i}`}>\r\n\t\t\t\t\t<h3>Day {i + 1}</h3>\r\n\t\t\t\t\t\t{RoomCalculator(i).map((room, j) => (\r\n\t\t\t\t\t\t<Room key={`Day ${i} Room ${j}`}>Room {room}</Room>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</Day>\r\n\t\t\t)})}\r\n\t\t</Cal>\r\n\t\t);\r\n};\r\n\r\nexport default Calendar;\r\n","import Calendar from './Calendar';\r\n\r\nexport default Calendar;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calendar from './components/Calendar';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Calendar />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}